
/*----------------------------------------------------------------------------/
/	例外の最終受付
/		例外が発生したら、セーブデータ下に"excepted/YYMMDDhhmmss/"ディレクトリを
/		作成して、状態を保存する
/----------------------------------------------------------------------------*/
var exceptionOccured	= false;	//	例外が発生したか？
System.exceptionHandler = function(e)
{
	// Determine where the log is placed
	var logpath = "";
	var logname = "krkr.console.log";
	var hwexceptpath = "";
	var hwexceptname = "hwexcept.log";
	if (typeof(global.Debug) === "Object" && typeof(global.Debug.logLocation) === "String")
	{
		logpath = global.Debug.logLocation;
		logname = "krkr.console.log";
	}
	else
	{
		logpath = System.exePath;
		logname = Storages.extractStorageName(System.exeName) + ".console.log";
	}
	if (typeof(global.System) === "Object" && typeof(global.System.dataPath) === "String")
	{
		hwexceptpath = global.System.dataPath;
	}
	else
	{
		hwexceptpath = System.exePath;
	}
	logpath += "/";
	logpath = Storages.getFullPath(logpath);
	hwexceptpath += "/";
	hwexceptpath = Storages.getFullPath(logpath);

	// Move the old log to another location
	try
	{
		if (Storages.isExistentStorage(logpath + logname))
		{
			if (typeof(Storages.getTime) === "Object")
			{
				var logtime = Storages.getTime(logpath + logname);
				if (typeof(logtime) === "Object")
				{
					var date = logtime.mtime;
					if (typeof(Storages.moveFile) === "Object")
					{
						Storages.moveFile(logpath + logname, logpath + ("krkr-%04d%02d%02d%02d%02d%02d.console.log").sprintf(date.getYear(), date.getMonth(), date.getDay(), date.getHours(), date.getMinutes(), date.getSeconds()));
					}
				}
			}
		}
	}
	catch (e) {}

	//	フルスクリーンモードで実行中だったら、ウィンドウモードに切り替える

	if (typeof(global.kag) === "Object" && isvalid(global.kag) && typeof(global.kag.fullScreened) === "Integer" && global.kag.fullScreened && typeof(global.kag.onWindowedMenuItemClick) === "Object" && isvalid(global.kag.onWindowedMenuItemClick))
	{
		global.kag.onWindowedMenuItemClick();
	}

	//	"script exception"が発生したら、処理しない
	var exception_message = "Unknown error";
	if (typeof(e) === "Object" && isvalid(e))
	{
		if (typeof(e.message) === "String")
		{
			exception_message = e.message;
		}
		dm("Exception: " + exception_message);
	}
	var trace_string = Scripts.getTraceString();
	if (trace_string !== "")
	{
		dm("Trace: " + trace_string);
	}
@if(0)
	if (e instanceof "ConductorException" && typeof(global.kag) === "Object" && isvalid(global.kag) && typeof(global.kag.mainWindow) === "Object" && isvalid(global.kag.mainWindow) && global.kag === global.kag.mainWindow)
		return false;
@endif

	//	時刻取得
	var date = new Date();
	var now;
	with(date)
		now = "%04d%02d%02d%02d%02d%02d".sprintf(.getYear(), .getMonth(), .getDay(), .getHours(), .getMinutes(), .getSeconds());

	//	セーブデータディレクトリの存在チェックと作成
	var dir, ticketfile, savefile, systemfile;
	if (typeof(global.kag) === "Object" && isvalid(global.kag) && typeof(global.kag.saveDataLocation) === "String")
	{
		var success = true;
		dir	= global.kag.saveDataLocation;
		if (!endsWith("/", dir)) {
			dir += "/";
		}
		if (success) try
		{
			Storages.createDirectory(dir) if !Storages.isExistentDirectory(dir);
		}
		catch(e)
		{
			success = false;
		}

		//	exceptedディレクトリの存在チェックと作成
		dir	+= "excepted/";
		if (success) try
		{
			Storages.createDirectory(dir) if !Storages.isExistentDirectory(dir);
		}
		catch(e)
		{
			success = false;	//	致命的エラー
		}

		//	今回のディレクトリ名決定して、作成する
		dir	+= now + "/";
		if (success) try
		{
			Storages.createDirectory(dir) if !Storages.isExistentDirectory(dir);
		}
		catch(e)
		{
			success = false;
		}

		if (success) try
		{
@if(!KIRIKIROID)
			if (Storages.isExistentStorage(logpath + logname))
			{
				if (typeof(global.Debug) === "Object" && typeof(global.Debug.logLocation) === "String")
				{
					global.Debug.logLocation = dir;
					Debug.startLogToFile(true);
				}
				else if (typeof(Storages.copyFile) === "Object")
				{
					Debug.startLogToFile(true);
					Storages.copyFile(logpath + logname, dir + "krkr.console.log", false);
				}
			}
@endif
@if(KIRIKIROID)
			Debug.startLogToFile();
@endif
		}
		catch (e) {}

		if (success) try
		{
			if (Storages.isExistentStorage(hwexceptpath + hwexceptname))
			{
				if (typeof(Storages.moveFile) === "Object")
				{
					Storages.moveFile(hwexceptpath + hwexceptname, dir + "hwexcept.log");
				}
			}
		}
		catch (e) {}

		if (success && typeof(global.kag.dataName) === "String")
		{
			var lastdataname = global.kag.dataName;
			global.kag.dataName = "excepted/" + now + "/" + lastdataname;
			try
			{
				if (typeof(global.TicketFileName) === "String")
				{
					ticketfile = TicketFileName + CurrentTicketNo + ".bmp";
				}
				if (typeof(global.makeTicketFile) === "String")
				{
					global.makeTicketFile(dir + ticketfile);
				}
			}
			catch (e) {}
			try
			{
				savefile = "data.kdt";
				if (global.kag.storeEnabled)
				{
					global.kag.saveBookMarkToFile(dir + savefile);
				}
				else
				{
					savefile = "";
				}
			}
			catch (e) {}
			try
			{
				systemfile = dir + "datas?.ksd";
				global.kag.saveSystemVariables();
			}
			catch (e) {}
			global.kag.dataName = lastdataname;
		}

	}

	//	イベント停止
	var ed	= System.eventDisabled;
	System.eventDisabled	= true;
/*
	//	メッセージ表示
	var msg;
	msg	= "下記の例外が発生しました。\n\n";
	msg	+= exception_message+"\n\n";
	msg	+= "※ 現在の進行状況を\n";
	msg	+= "     ・"+dir+ticketfile+"\n";
	msg	+= "     ・"+dir+savefile+"\n" if savefile != "";
	msg	+= "     ・"+systemfile+"\n";
	msg	+= "   に保存しましたので、問題が取り除かれた後に復帰してください。\n";
	msg	+= "-- trace --\n"+e.trace if e.trace != "";
*/
	var msg, endmsg;
@if(GAME_FHAT)
	var errorSaveFile = _x("     ・%s%s\n", "error_save_file").sprintf(dir ? dir : "", savefile ? savefile : "");
	var errorTrace = _x("-- trace --\n%s", "error_trace").sprintf(e.trace);
	msg = __("下記の例外が発生しました。\n\n%s\n\n※ 現在の進行状況を\n     ・%s%s\n%s     ・%s\n   に保存しましたので、問題が取り除かれた後に復帰してください。\n%s").sprintf(exception_message, dir ? dir : "", ticketfile ? ticketfile : "", savefile ? errorSaveFile : "", systemfile ? systemfile : "", e.trace != ""? errorTrace : "");
@endif
@if(GAME_FATE)
	if(e instanceof "ConductorException")
	{
		//	KAGスクリプト上での例外
		//	※ココでの例外では、再起動し直してもうまく動かない可能性が高い。
		// msg	= "下記のスクリプトエラーが発生しました。\n";
		// msg	+="\n";
		// msg	+="--------------------------------------------------------------------------------\n";
		// msg	+=exception_message+"\n";
		// msg	+="--------------------------------------------------------------------------------\n";
		// msg	+="\n";
		// msg	+="Fateのインストールディレクトリに作成されている\"fate.exe.console.log\"と\"hwexcept.log\"、\n";
		// msg	+="エラーの発生するセーブデータを、発生した時の状況/操作手順などと共にTYPE-MOON\n";
		// msg	+="サポート掲示板までご連絡ください。\n\n";
		// msg	+="※情報が不十分ですと回答できませんので、必ずファイル・情報をご提供ください。\n\n";
		// msg	+="TYPE-MOONサポート掲示板: http://www.typemoon.com/support/bbs.php\n\n";
		// endmsg	= "Pキーでタイトルへ戻るか、通常の手順で終了してください。";

		msg = __("下記のスクリプトエラーが発生しました。\n\n--------------------------------------------------------------------------------\n%s\n--------------------------------------------------------------------------------\n\nFateのインストールディレクトリに作成されている\"fate.exe.console.log\"と\"hwexcept.log\"、\nエラーの発生するセーブデータを、発生した時の状況/操作手順などと共にTYPE-MOON\nサポート掲示板までご連絡ください。\n\n※情報が不十分ですと回答できませんので、必ずファイル・情報をご提供ください。\n\nTYPE-MOONサポート掲示板: %s\n\n").sprintf(exception_message, global.PatchInfoURL);
		endmsg = __("Pキーでタイトルへ戻るか、通常の手順で終了してください。");
	}
	else
	{
		//	それ以外の例外
		//	※再起動し直せばうまく動く可能性がある。
		// msg	= "下記のエラーが発生しました。\n";
		// msg	+="\n";
		// msg	+="--------------------------------------------------------------------------------\n";
		// msg	+=exception_message+"\n";
		// msg	+="--------------------------------------------------------------------------------\n";
		// msg	+="\n";
		// msg	+="アンチウィルスソフトその他の常駐アプリケーションを終了してゲームを再起動することでエラーを\n";
		// msg	+="回避できる可能性があります。繰り返し同じようなエラーが発生する場合には、\n";
		// msg	+="Fateのインストールディレクトリに作成されている\"fate.exe.console.log\"と\"hwexcept.log\"、\n";
		// msg	+="エラーの発生するセーブデータを、発生した時の状況/操作手順などと共にTYPE-MOON\n";
		// msg	+="サポート掲示板までご連絡ください。\n\n";
		// msg	+="※情報が不十分ですと回答できませんので、必ずファイル・情報をご提供ください。\n\n";
		// msg	+="TYPE-MOONサポート掲示板: http://www.typemoon.com/support/bbs.php\n\n";
		// endmsg	= "";

		msg = __("下記のエラーが発生しました。\n\n--------------------------------------------------------------------------------\n%s\n--------------------------------------------------------------------------------\n\nアンチウィルスソフトその他の常駐アプリケーションを終了してゲームを再起動することでエラーを\n回避できる可能性があります。繰り返し同じようなエラーが発生する場合には、\nFateのインストールディレクトリに作成されている\"fate.exe.console.log\"と\"hwexcept.log\"、\nエラーの発生するセーブデータを、発生した時の状況/操作手順などと共にTYPE-MOON\nサポート掲示板までご連絡ください。\n\n※情報が不十分ですと回答できませんので、必ずファイル・情報をご提供ください。\n\nTYPE-MOONサポート掲示板: %s\n\n").sprintf(exception_message, global.PatchInfoURL);
		endmsg = "";
	}

	//	ゲーム本編中なら、セーブしておく
	if (typeof(global.kag) === "Object" && isvalid(global.kag) && typeof(global.kag.pcflags) === "Object" && isvalid(global.kag.pcflags) && global.kag.pcflags.currentPageName !== "タイトル")
	{
		try {
			//	空いているセーブ領域を探して、セーブする
			msg	+="--------------------------------------------------------------------------------\n";
			var win = global.kag;
			var saved	= false;
			var quickcount	= 10;
			var normalcount	= 300;
			var no;
			var key	= "(例外からの復帰用データ)";
			for(var i=0; i<quickcount; i++)
			{
				no = win.numBookMarks - 1 - i;
				if(win.bookMarkDates[no]=="" || win.bookMarkNames[no].substr(0, key.length)==key)
				{
					//	クイックセーブに保存
					win.bookMarkNames[no]	= key+win.bookMarkNames[no];
					win.saveBookMark(no);
					saved	= true;
					// msg	+="現在の状況をクイックセーブの"+i+"番目に保存しました。\n";
					// msg	+="セーブデータのファイル名は、\n「";
					// msg	+=Storages.getLocalName(Storages.getFullPath(win.getBookMarkFileNameAtNum(no)))+
					// 	"」\nとなります。\n";
					msg += __("現在の状況をクイックセーブの%s番目に保存しました。\nセーブデータのファイル名は、\n「%s」\nとなります。\n")
					.sprintf(i, Storages.getLocalName(Storages.getFullPath(win.getBookMarkFileNameAtNum(no))));
					break;
				}
			}
			if(!saved)
			{
				for(var i=0; i<normalcount; i++)
				{
					no	= i;
					if(win.bookMarkDates[no]=="")
					{
						//	通常のセーブ領域に保存
						win.scflags.bookMarkComments[no]	= __("例外からの復帰用データ");
						win.saveBookMark(no);
						var pos = global.kag.sflags.convertSaveNoToFileNo[no];
						saved	= true;
						// msg	+="現在の状況をセーブメニューの「"+(pos\20+1)+"ページ "+(pos%20\5+1)+"行 "+
						// 	(pos%5+1)+"列目」に保存しました。";
						// msg	+="セーブデータのファイル名は、\n「";
						// msg	+=Storages.getLocalName(Storages.getFullPath(win.getBookMarkFileNameAtNum(no)))+
						// 	"」\nとなります。\n";
						msg += __("現在の状況をセーブメニューの「%sページ %s行 %s列目」に保存しました。セーブデータのファイル名は、\n「%s」\nとなります。\n").sprintf(pos\20+1, pos%20\5+1, pos%5+1, Storages.getLocalName(Storages.getFullPath(win.getBookMarkFileNameAtNum(no))));
						break;
					}
				}
				if(!saved)
				{
					//	セーブデータが一杯なので、保存先を選んでもらう
					// msg	+="セーブデータに空きがありません。\n";
					// msg	+="セーブメニューを開きますので、適当な場所に保存してください。\n";
					msg += __("セーブデータに空きがありません。\nセーブメニューを開きますので、適当な場所に保存してください。\n");
					global.shortcut_object.show("save");	//	セーブメニューを開く
				}
			}
		}
		catch(e) {}
	}
	if(endmsg!="")
	{
		msg	+=__("--------------------------------------------------------------------------------\n");
		msg	+=endmsg;
	}
@endif

	System.inform(msg);

	//	イベント再開
	System.eventDisabled	= ed;
	exceptionOccured	= true;	//	例外が発生しているので、終了時点での確認→データ保存を行わない

@if(!KIRIKIROID)
	if (!devMode && !devMode2) {
		if (System.getArgument('-openlogdironerror') !== "no")
		{
			if (typeof(logpath) === "String")
			{
				var localpath = Storages.getLocalName(logpath);
				if (localpath !== "")
				{
					System.shellExecute(("\"%s\"").sprintf(localpath));
				}
			}
		}

		if (System.getArgument('-openpatchinfourlonerror') !== "no" && typeof(global.PatchInfoURL) === "String")
		{
			System.shellExecute(global.PatchInfoURL);
		}
	}

	if (typeof(global.kag) === "Object" && isvalid(global.kag) && typeof(global.kag.visible) == "Integer" && global.kag.visible == false)
	{
		System.exit(127);
	}
@endif

@if(KIRIKIROID)
	global.System.exitOnNoWindowStartup = false;
@endif

	return true;	//	停止
};

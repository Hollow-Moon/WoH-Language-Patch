@if(!WIDE_MODE)
kag.tagHandlers.initscroll = function(mp) {
	return 0;
};

kag.tagHandlers.dispscroll = function(mp) {
	return 0;
};
@endif

@if(WIDE_MODE)
kag.tagHandlers.initscroll = function(mp) {
	// Parameters: from, to, time
	mp.time = -1;
	return tagHandlers.dispscroll(mp);
} incontextof kag;

kag.tagHandlers.dispscroll = function(mp) {
	// Parameters: from, to, time
	originalscrollYOffset = void;
	var moveTime = (mp.time != 0)? mp.time : 600;
	// TODO dunno what's the difference between "from" and "to" - they are almost always given the same value - need to test a scene where this is not the case.
	var yOffset = +mp.from;

	if (scrollYOffset == yOffset) {
		return 0;
	}

	// TODO time=-1 is a patch when being called from initscroll
	if ((!wideScreen && !isCropped) || mp.time == -1) {
		updateScrollPosition(,yOffset);
		return 0;
	}

	//var waitMoveTag = %["tagname" => "wm", "canskip" => 1];
	//conductor.pendings.insert(0, waitMoveTag);
	var moveTagParams = %["layer" => "primaryLayer", "time" => moveTime, "bg" => true, "textoff" => 1, "path" => "(0,"+("" + yOffset)+",255)"];
	return tagHandlers.move(moveTagParams);
} incontextof kag;

kag.updateScrollPosition = function(x, y) {
	scrollXOffset = x if x !== void;
	scrollYOffset = y if y !== void;

	if (!wideScreen && !isCropped) return;

	updateScrollRecursively(this.primaryLayer, scrollXOffset, scrollYOffset);
} incontextof kag;

kag.scrollDown = function() {
	originalscrollYOffset = scrollYOffset if originalscrollYOffset === void;
	updateScrollPosition(,Math.min(scrollYOffset+scrollYOffsetSpeed, scrollYOffsetMax));
} incontextof kag;

kag.scrollUp = function() {
	originalscrollYOffset = scrollYOffset if originalscrollYOffset === void;
	updateScrollPosition(,Math.max(scrollYOffset-scrollYOffsetSpeed, scrollYOffsetMin));
} incontextof kag;

kag.scrollReset = function() {
	if (originalscrollYOffset !== void) {
		updateScrollPosition(,originalscrollYOffset);
		originalscrollYOffset = void;
	}
} incontextof kag;

kag.updateScrollRecursively = function(layer, x, y) {
	if (layer.isbg) {
		if (layer.parent === this.primaryLayer) {
			layer.topScroll = -y;
		}
		for (var i = 0; i < layer.children.count; i++) {
			this.updateScrollRecursively(layer.children[i], x, y);
		}
	} else {
		layer.topScroll = y;
	}
} incontextof kag;


class LinearMoverBackground extends LinearMoverEx
{
	function LinearMoverBackground()
	{
		super.LinearMoverEx(...);
	}

	function updateData(a, b)
	{
		kag.updateScrollPosition(a, b);
	}
}
@endif

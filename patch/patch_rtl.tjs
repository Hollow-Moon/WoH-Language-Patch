
// Right to left text support.
// Vertical text is currently not supported.
// ActingMessageLayer is currently not supported.

global.init_arabic_shaper_instance = function()
{
	var as = new global.ArabicShaping(0);
	global.arabic_shaper_instance_rtl = new global.ArabicShaping(as.LETTERS_SHAPE | as.TEXT_DIRECTION_VISUAL_RTL | as.LENGTH_GROW_SHRINK);
	global.arabic_shaper_instance_ltr = new global.ArabicShaping(as.LETTERS_SHAPE | as.TEXT_DIRECTION_VISUAL_LTR | as.LENGTH_GROW_SHRINK);
};


global.Layer_patch_rtl_original = global.Layer;
class Layer_patch_rtl_override extends global.Layer_patch_rtl_original
{
	function Layer_patch_rtl_override()
	{
		super.Layer(...);
	}

	function Layer()
	{
		this.Layer_patch_rtl_override(...);
	}

	function operateRect(left, top, src, sleft, stop, swidth, sheight, mode, opacity)
	{
		if (this.name === "行描画用浮遊メッセージレイヤ" && global.get_rtl_enabled(typeof(global.kag) === "Object" ? global.kag : this.window))
		{
			left = this.parent.relinexpos - left;
			left -= src.imageWidth;
			return (global.Layer_patch_rtl_original.operateRect incontextof this)(left, top, src, sleft, stop, swidth, sheight, mode, opacity);
		}
		return (global.Layer_patch_rtl_original.operateRect incontextof this)(...);
	}

	function setPos(left, top, width, height)
	{
		if ((this instanceof "ClickGlyphLayer") && global.get_rtl_enabled(typeof(global.kag) === "Object" ? global.kag : this.window))
		{
			left = this.parent.relinexpos - (this.parent.lineLayerPos);
			left += this.imageWidth;
			return (global.Layer_patch_rtl_original.setPos incontextof this)(left, top, width, height);
		}
		return (global.Layer_patch_rtl_original.setPos incontextof this)(...);
	}

	function drawText(left, top, text, color, opacity, aa, slevel, scolor, swidth, sofsx, sofsy)
	{
		if (!global.get_rtl_enabled(typeof(global.kag) === "Object" ? global.kag : this.window))
		{
			return (global.Layer_patch_rtl_original.drawText incontextof this)(...);
		}
		text += "";
		var avoid_reposition_cond = (typeof(this.in_text_drawer) === "Integer" && this.in_text_drawer) || (this instanceof "MenuItemChildLayer") || (this.parent !== null && isvalid(this.parent) && this.parent instanceof "ConfigMenuLayer");
		if (global.get_arabic_shaping_enabled(typeof(global.kag) === "Object" ? global.kag : this.window))
		{
			if (this.name !== "行描画用浮遊メッセージレイヤ") /* Message layer */
			{
				if (typeof(global.arabic_shaper_instance_ltr) !== "Object")
				{
					global.init_arabic_shaper_instance();
				}
				var bidi_str = global.Bidi.from_string(global.arabic_presentation_tashkil_remap(global.arabic_shaper_instance_rtl.shape(text)), %["direction" => "RTL"]);
				bidi_str.reorder_visually();
				text = bidi_str.toString();
			}
			// Don't reposition in text drawer
			if (!avoid_reposition_cond)
			{
				if (global.get_half_height_offset_hack(typeof(global.kag) === "Object" ? global.kag : this.window))
				{
					top -= this.font.height \ 2;
				}
			}
		}
		
		// Don't reposition in text drawer
		if (!avoid_reposition_cond)
		{
			if (this.name === "行描画用浮遊メッセージレイヤ") /* Message layer */
			{
				left = this.parent.relinexpos - left;
			}
			else
			{
				left = this.width - left;
			}
			left -= this.font.getTextWidth(text);
		}
		return (global.Layer_patch_rtl_original.drawText incontextof this)(left, top, text, color, opacity, aa, slevel, scolor, swidth, sofsx, sofsy);
	}
}
global.Layer = global.Layer_patch_rtl_override;


// horizontal flip of linebreak glyph for rtl
global.AnimationLayer_patch_rtl_original = global.AnimationLayer;
class AnimationLayer_patch_rtl_override extends global.AnimationLayer_patch_rtl_original
{
	function AnimationLayer_patch_rtl_override()
	{
		super.AnimationLayer(...);
	}

	function AnimationLayer()
	{
		this.AnimationLayer_patch_rtl_override(...);
	}

	function loadImages(elm)
	{
		if (global.get_rtl_enabled(typeof(global.kag) === "Object" ? global.kag : this.window)) {
			if (typeof(elm) === "Object" && (elm.storage === "LineBreak" || elm.storage === "PageBreak")) {
				elm.fliplr = true;
			}
		}
		super.loadImages(elm);
	}
}
global.AnimationLayer = global.AnimationLayer_patch_rtl_override;

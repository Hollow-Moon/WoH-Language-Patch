
global.KAGWindow_patch_fix_savedata_by_jump_original = global.KAGWindow;
class KAGWindow_patch_fix_savedata_by_jump_override extends global.KAGWindow_patch_fix_savedata_by_jump_original
{
	function KAGWindow_patch_fix_savedata_by_jump_override()
	{
		super.KAGWindow(...);
	}

	function KAGWindow()
	{
		this.KAGWindow_patch_fix_savedata_by_jump_override(...);
	}

	function internalStoreFlags(f)
	{
		super.internalStoreFlags(...);

		f.patch_version = global.PatchVersion;
	}

	function restoreFlags()
	{
		if (this.sflags.savedataRepair || (this.pcflags.patch_version === void || (this.pcflags.patch_version.join("|") !== global.PatchVersion.join("|"))))
		{
			(global.Dictionary.assignStruct incontextof this.flags)(this.pflags);
			
			var save_testmode = global.testmode;
			global.testmode = true;
			var scenario = this.pcflags.mainConductor.storageShortName;
			var flowfile = void;
			var flowid = void;
@if(GAME_FATE||GAME_FHAT)
			if (typeof(this.pcflags.current_id) === "Integer" && typeof(this.pcflags.current_flowfile) === "String")
			{
				scenario = void;
				flowid = this.pcflags.current_id;
				flowfile = this.pcflags.current_flowfile;
			}
@endif
@if(GAME_WOHN)
			var wanted_scriptno = this.pcflags.scriptno - 1;
			if (typeof(this.pcflags.scriptno) === "Integer" && typeof(this.pcflags.scripts) === "Object" && this.pcflags.scripts.count > wanted_scriptno && this.pcflags.scripts[wanted_scriptno] !== "teatime.ks")
			{
				scenario = this.pcflags.scripts[wanted_scriptno];
			}
			else if (typeof(this.pcflags.chart_storage) === "String" && typeof(this.pcflags.chart_current) === "Integer")
			{
				scenario = void;
				flowfile = this.pcflags.chart_storage;
				flowid = this.pcflags.chart_current;
			}
			if (typeof(this.pflags.av_no) === "Integer" && typeof(this.pflags.av_storage) === "Object" && this.pflags.av_storage.count > this.pflags.av_no)
			{
				global.startArchiveWithScenario(this.pflags.av_storage[this.pflags.av_no]);
			}
			else
@endif
			{
				global.open_scenario_using_scenario_tracker(this, scenario, flowid, flowfile);
			}
@if(GAME_WOHN)
			if (typeof(scenario) === "String")
@endif
			{
				this.set_skip(, this.pcflags.mainConductor.curLabel);
			}
@if(!GAME_WOHN)
			this.do_immediate_skip();
@endif
			global.testmode = save_testmode;
			return;
		}
		return super.restoreFlags();
	}

}
global.KAGWindow = global.KAGWindow_patch_fix_savedata_by_jump_override;


global.HistoryLayer_patch_historylayer_original = global.HistoryLayer;
class HistoryLayer_patch_historylayer_override extends global.HistoryLayer_patch_historylayer_original
{
	function HistoryLayer_patch_historylayer_override()
	{
		super.HistoryLayer(...);
	}

	function HistoryLayer()
	{
		this.HistoryLayer_patch_historylayer_override(...);
	}

	function repage()
	{
		//Do not repage if page is empty (whitespaces count as content if you want to force an empty page).
		var allEmpty = true;
		for(var i = 0, internal_forloop_count = this.data[this.dataPage].count; i < internal_forloop_count; i += 1)
		{
			if(this.data[this.dataPage][i] != "")
			{
				allEmpty = false;
			}
		}
		if(allEmpty && this.currentLine == "") return; // 何もデータが入っていない場合、なにもしない
		super.repage();
	}

	function getCurrentLineWidth()
	{
		return this.font.getTextWidth(this.currentLine);
	}

	function store(ch)
	{
		if(!this.autoReturn)
		{
			// 自動改行を行わない場合
			this.currentLine += ch;
		}
		else
		{
			// 自動改行を行う場合
@if(0)
			var len;
			if((len = this.font.getTextWidth(currentLine += ch)) >= relinePos)
@endif
			var len = this.getCurrentLineWidth() + this.font.getTextWidth(ch);
			this.currentLine += ch;
			if(len >= this.relinePos)
			{
				var curlen = this.currentLine.length;
				var lastch = curlen >= 2 ? this.currentLine[curlen - 2] : '';

				if(((lastch=='' || this.wwLeading.indexOf(lastch)==-1) &&
					this.wwFollowing.indexOf(ch)==-1) ||
					(lastch!='' && this.wwFollowingWeak.indexOf(lastch)!=-1 &&
						this.wwFollowingWeak.indexOf(ch)!=-1) || len > this.limitPos)
				{
					// 最後に描画したのが行末禁則文字でない場合
					// しかもこれから描画するのが行頭禁則文字でない
					// 場合
					// または弱禁則文字が連続していない場合
					// はたまたこれから描画するのが強禁則文字ではなくて、
					// 確実に 右端を越える場合
					// ( この場合は余白は考えない )
					this.currentLine=
						this.currentLine.substring(0, this.currentLine.length - ch.length);	//	追加した文字を取り除く
					this.reline();
@if(0)
					this.currentLine = ch;
@endif
					this.currentLine = ch != " "? ch : "";
				}
			}
		}
	}

	function beginIndent()
	{
		super.beginIndent();
		this.indentPos += this.lineStart[this.dataPage][this.dataPos];
	}
}
global.HistoryLayer = global.HistoryLayer_patch_historylayer_override;

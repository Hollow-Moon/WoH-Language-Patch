function scalePosition(v, size, scaledSize, parentSize, parentScaledSize, align=0)
{
    if (size >= parentSize) {
        v *= scaledSize / size;
        if (size == parentSize) {
            v += (parentScaledSize - scaledSize) * align;
        }
    } else {
        if (v < 0) {
            v *= scaledSize / size;
        } else if (v > parentSize - size) {
            var m = scaledSize / size;
            var n = parentScaledSize - m * parentSize;
            v = m * v + n;
        } else {
            v *= (parentScaledSize - scaledSize) / (parentSize - size);
        }
    }
@if(SCALE_ROUND_TOWARDS_NEAREST)
    v = global.Math.round(v);
@endif
    return v | 0;
}

function scaleSize(v, scale)
{
    v *= scale;
@if(SCALE_ROUND_TOWARDS_NEAREST)
    v = global.Math.round(v);
@endif
    return v | 0;
}

function unscaleSize(v, scale)
{
@if(SCALE_USING_FLOATING_POINT)
    v /= scale;
@endif
@if(!SCALE_USING_FLOATING_POINT)
    v \= scale;
@endif
@if(SCALE_ROUND_TOWARDS_NEAREST)
    v = global.Math.round(v) | 0;
@endif
    return v;
}

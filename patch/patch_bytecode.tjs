
if (typeof(global.Storages.getLastModifiedFileTime) !== "Object")
{
	if (global.Storages.isExistentStorage("fstat.dll"))
	{
		global.Plugins.link("fstat.dll");
	}
}

if (typeof(global.Storages.getLastModifiedFileTime) === "Object" && typeof(global.Scripts.compileStorage) === "Object" && typeof(global.GameID) === "String")
{
	global.Scripts.execStorageOld = global.Scripts.execStorage;
	global.Scripts.evalStorageOld = global.Scripts.evalStorage;

	global.scriptsLoaded = %[];
	global.scriptsBytecodeExclusions = ["MessageLayer", "patch_hd", "patch_hd_layer"];
@if(0)
	global.Scripts.execStorage = function(storage, mode, context)
	{
		if (mode == void)
		{
			mode = "";
		}
		if (context == void)
		{
			context = global;
		}
		return global.Scripts.execStorageOld(storage, mode, context);
	};
	global.Scripts.evalStorage = function(storage, mode, context)
	{
		if (mode == void)
		{
			mode = "";
		}
		if (context == void)
		{
			context = global;
		}
		return global.Scripts.evalStorageOld(storage, mode, context);
	};
@endif
@if(0)
	global.Scripts.execStorage = global.Scripts.execStorageOld;
	global.Scripts.evalStorage = global.Scripts.evalStorageOld;
@endif
@if(1)
	global.Scripts.execStorage = function(storage, mode, context)
	{
		if (mode == void && context == void)
		{
			var arcdelim = global.System.getArgument("-arcdelim");
			if (!arcdelim)
				arcdelim = ">";

			var full_location = global.Storages.getPlacedPath(storage);
			if (full_location != "")
			{
				var full_path = global.Storages.extractStoragePath(full_location);
				if (full_path != "")
				{
					var full_location_noext = global.Storages.chopStorageExt(full_location);
					var full_location_noext_basename = global.Storages.extractStorageName(full_location_noext);
					var full_location_extonly = global.Storages.extractStorageExt(full_location);
					var full_location_bytecode = ("%s.%s%sb").sprintf(full_location_noext, global.GameID, full_location_extonly);
					if (global.scriptsLoaded[full_location_noext_basename] == true)
					{
						return;
					}
					var script_excluded = false;
					for (var i = 0, internal_forloop_count = global.scriptsBytecodeExclusions.count; i < internal_forloop_count; i += 1)
					{
						if (global.scriptsBytecodeExclusions[i].toLowerCase() == full_location_noext_basename.toLowerCase())
						{
							global.dm(full_location_noext_basename + " script excluded");
							script_excluded = true;
							break;
						}
					}
					if (!script_excluded)
					{
						if (full_path.indexOf(arcdelim) == -1)
						{
							if ((!global.Storages.isExistentStorage(full_location_bytecode)) || (global.Storages.getLastModifiedFileTime(full_location_bytecode) < global.Storages.getLastModifiedFileTime(full_location)))
							{
								global.Scripts.compileStorage(full_location, full_location_bytecode, true, false, false);
							}
						}
						if (global.Storages.isExistentStorage(full_location_bytecode))
						{
							global.scriptsLoaded[full_location_noext_basename] = true;
							return global.Scripts.execStorageOld(full_location_bytecode);
						}
					}
				}
			}
		}
		return global.Scripts.execStorageOld(storage, mode, context);
	};

	global.Scripts.evalStorage = function(storage, mode, context)
	{
		if (mode == void && context == void)
		{
			var arcdelim = global.System.getArgument("-arcdelim");
			if (!arcdelim)
				arcdelim = ">";

			var full_location = global.Storages.getPlacedPath(storage);
			if (full_location != "")
			{
				var full_path = global.Storages.extractStoragePath(full_location);
				if (full_path != "")
				{
					var full_location_noext = global.Storages.chopStorageExt(full_location);
					var full_location_extonly = global.Storages.extractStorageExt(full_location);
					var full_location_bytecode = ("%s.%s%sb").sprintf(full_location_noext, global.GameID, full_location_extonly);
					if (full_path.indexOf(arcdelim) == -1)
					{
						if ((!global.Storages.isExistentStorage(full_location_bytecode)) || (global.Storages.getLastModifiedFileTime(full_location_bytecode) < global.Storages.getLastModifiedFileTime(full_location)))
						{
							global.Scripts.compileStorage(full_location, full_location_bytecode, true, false, true);
						}
					}
					if (global.Storages.isExistentStorage(full_location_bytecode))
					{
						return global.Scripts.evalStorageOld(full_location_bytecode);
					}
				}
			}
		}
		return global.Scripts.evalStorageOld(storage, mode, context);
	};

	global.KAGLoadScript = function(name)
	{
		global.dm("Loading " + name);
		var start = global.System.getTickCount();
		try
		{
			var full_location = global.Storages.getPlacedPath(name);
			var full_location_noext = global.Storages.chopStorageExt(full_location);
			var full_location_noext_basename = global.Storages.extractStorageName(full_location_noext);
			var script_excluded = false;
			for (var i = 0, internal_forloop_count = global.scriptsBytecodeExclusions.count; i < internal_forloop_count; i += 1)
			{
				if (global.scriptsBytecodeExclusions[i].toLowerCase() == full_location_noext_basename.toLowerCase())
				{
					script_excluded = true;
					break;
				}
			}
			if (script_excluded)
			{
				global.dm(name + " script excluded");
				global.Scripts.execStorageOld(name);
			}
			else
			{
				global.Scripts.execStorage(name);
			}
		}
		catch (e)
		{
			var end = global.System.getTickCount();
			global.dm(name + " failed to load in " + (end - start) + "ms");
			throw e;
		}
		var end = global.System.getTickCount();
		global.dm(name + " was loaded in " + (end - start) + "ms");
	};
@endif
}
else
{
	var msg = "";
	msg += "patch_bytecode: failed to initialize for the following reasons:\n";
	if (typeof(global.Storages.getLastModifiedFileTime) !== "Object")
	{
		msg += "patch_bytecode: getLastModifiedFileTime function not found\n";
	}
	if (typeof(global.Scripts.compileStorage) !== "Object")
	{
		msg += "patch_bytecode: compileStorage function not found (probably not Kirikiri Z)\n";
	}
	if (typeof(global.GameID) !== "String")
	{
		msg += "patch_bytecode: GameID variable not found\n";
	}
	global.Debug.message(msg);
}

class FontWrapperHD extends global.FontWrapper
{
	function FontWrapperHD(font, layer)
	{
		super.FontWrapper(...);
	}

	property height
	{
		getter
		{
			return this.layer.window.unscaleHeightFloat(super.height);
		}
		setter(v)
		{
			super.height = this.layer.scaleHeight(v);
		}
	}

	function getTextHeight()
	{
		return this.layer.window.unscaleHeightFloat(super.getTextHeight(...));
	}

	function getTextWidth()
	{
		var windowWideFactor = 1;
		if (["Integer", "Real"].find(typeof(this.layer.window.wideFactor)) !== -1)
		{
			windowWideFactor = this.layer.window.wideFactor;
		}
		var factor = this.layer.stretch? windowWideFactor : 1;
		return this.layer.window.unscaleHeightFloat(super.getTextWidth(...)) / factor;
	}

	function getGlyphDrawRect()
	{
		if (typeof(this.font.getGlyphDrawRect) !== "Object")
		{
			return;
		}
		var rect = super.getGlyphDrawRect(...);
		rect.setSize(this.layer.window.unscaleHeightFloat(rect.width), this.layer.window.unscaleHeightFloat(rect.height));
		return rect;
	}

	function getEscWidthX()
	{
		return this.layer.window.unscaleHeightFloat(super.getEscWidthX(...));
	}

	function getEscWidthY()
	{
		return this.layer.window.unscaleHeightFloat(super.getEscWidthY(...));
	}

	function getEscHeightX()
	{
		return this.layer.window.unscaleHeightFloat(super.getEscHeightX(...));
	}

	function getEscHeightY()
	{
		return this.layer.window.unscaleHeightFloat(super.getEscHeightY(...));
	}
}

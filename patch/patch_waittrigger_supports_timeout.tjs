
global.KAGWindow_patch_waittrigger_supports_timeout_original = global.KAGWindow;
class KAGWindow_patch_waittrigger_supports_timeout_override extends global.KAGWindow_patch_waittrigger_supports_timeout_original
{
	function KAGWindow_patch_waittrigger_supports_timeout_override()
	{
		super.KAGWindow(...);
	}

	function KAGWindow()
	{
		this.KAGWindow_patch_waittrigger_supports_timeout_override(...);
	}

	function waitTrigger(elm)
	{
		// elm.name で示されたトリガを待つ
		var time = void;
		if (elm.time !== void)
		{
			time = +elm.time;
			if (time == 0)
			{
				return 0;
			}
		}
		if((elm.canskip !== void && +elm.canskip) && this.clickSkipEnabled)
		{
			// スキップできる場合
			if(this.skipMode)
			{
				// スキップ動作中
				if(elm.onskip !== void) global.Scripts.eval(elm.onskip);
				return 0; // すぐに返る
			}
			var waitdict = %[
				click : function(arg)
				{
					if(arg !== void) global.Scripts.eval(arg);
				} incontextof this,
				click_arg : elm.onskip,
				elm.name => function
				{
				} incontextof this
			];
			if (time !== void)
			{
				this.conductor.waitWithTimeOut(waitdict, time);
			}
			else
			{
				this.conductor.wait(waitdict);
			}
		}
		else
		{
			var waitdict = %[
				elm.name => function
				{
				} incontextof this
			];
			if (time !== void)
			{
				this.conductor.waitWithTimeOut(waitdict, time);
			}
			else
			{
				this.conductor.wait(waitdict);
			}
		}
		return -2;
	}
}
global.KAGWindow = global.KAGWindow_patch_waittrigger_supports_timeout_override;
